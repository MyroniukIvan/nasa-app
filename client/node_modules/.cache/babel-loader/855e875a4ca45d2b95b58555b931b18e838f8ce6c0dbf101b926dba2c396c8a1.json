{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport { httpGetLaunches, httpSubmitLaunch, httpAbortLaunch } from './requests';\nfunction useLaunches(onSuccessSound, onAbortSound, onFailureSound) {\n  _s();\n  const [launches, saveLaunches] = useState([]);\n  const [isPendingLaunch, setPendingLaunch] = useState(false);\n  const getLaunches = useCallback(async () => {\n    const fetchedLaunches = await httpGetLaunches();\n    saveLaunches(fetchedLaunches);\n  }, []);\n  useEffect(() => {\n    getLaunches();\n  }, [getLaunches]);\n  const submitLaunch = useCallback(async e => {\n    e.preventDefault();\n    setPendingLaunch(true);\n    const data = new FormData(e.target);\n    const launchDate = new Date(data.get(\"launch-day\"));\n    const mission = data.get(\"mission-name\");\n    const rocket = data.get(\"rocket-name\");\n    const target = data.get(\"planets-selector\");\n    const response = await httpSubmitLaunch({\n      launchDate,\n      mission,\n      rocket,\n      target\n    });\n\n    // TODO: Set success based on response.\n    const success = false;\n    if (success) {\n      getLaunches();\n      setTimeout(() => {\n        setPendingLaunch(false);\n        onSuccessSound();\n      }, 800);\n    } else {\n      onFailureSound();\n    }\n  }, [getLaunches, onSuccessSound, onFailureSound]);\n  const abortLaunch = useCallback(async id => {\n    const response = await httpAbortLaunch(id);\n\n    // TODO: Set success based on response.\n    const success = false;\n    if (success) {\n      getLaunches();\n      onAbortSound();\n    } else {\n      onFailureSound();\n    }\n  }, [getLaunches, onAbortSound, onFailureSound]);\n  return {\n    launches,\n    isPendingLaunch,\n    submitLaunch,\n    abortLaunch\n  };\n}\n_s(useLaunches, \"8KpHIIq7AzMRt3raNpddjI+KYXY=\");\nexport default useLaunches;","map":{"version":3,"names":["useCallback","useEffect","useState","httpGetLaunches","httpSubmitLaunch","httpAbortLaunch","useLaunches","onSuccessSound","onAbortSound","onFailureSound","_s","launches","saveLaunches","isPendingLaunch","setPendingLaunch","getLaunches","fetchedLaunches","submitLaunch","e","preventDefault","data","FormData","target","launchDate","Date","get","mission","rocket","response","success","setTimeout","abortLaunch","id"],"sources":["/Users/ivanmironuk/WebstormProjects/nasa-app/client/src/hooks/useLaunches.js"],"sourcesContent":["import {useCallback, useEffect, useState} from \"react\";\n\nimport {\n    httpGetLaunches, httpSubmitLaunch, httpAbortLaunch,\n} from './requests';\n\nfunction useLaunches(onSuccessSound, onAbortSound, onFailureSound) {\n    const [launches, saveLaunches] = useState([]);\n    const [isPendingLaunch, setPendingLaunch] = useState(false);\n\n    const getLaunches = useCallback(async () => {\n        const fetchedLaunches = await httpGetLaunches();\n        saveLaunches(fetchedLaunches);\n    }, []);\n\n    useEffect(() => {\n        getLaunches();\n    }, [getLaunches]);\n\n    const submitLaunch = useCallback(async (e) => {\n        e.preventDefault();\n        setPendingLaunch(true);\n        const data = new FormData(e.target);\n        const launchDate = new Date(data.get(\"launch-day\"));\n        const mission = data.get(\"mission-name\");\n        const rocket = data.get(\"rocket-name\");\n        const target = data.get(\"planets-selector\");\n        const response = await httpSubmitLaunch({\n            launchDate, mission, rocket, target,\n        });\n\n        // TODO: Set success based on response.\n        const success = false;\n        if (success) {\n            getLaunches();\n            setTimeout(() => {\n                setPendingLaunch(false);\n                onSuccessSound();\n            }, 800);\n        } else {\n            onFailureSound();\n        }\n    }, [getLaunches, onSuccessSound, onFailureSound]);\n\n    const abortLaunch = useCallback(async (id) => {\n        const response = await httpAbortLaunch(id);\n\n        // TODO: Set success based on response.\n        const success = false;\n        if (success) {\n            getLaunches();\n            onAbortSound();\n        } else {\n            onFailureSound();\n        }\n    }, [getLaunches, onAbortSound, onFailureSound]);\n\n    return {\n        launches, isPendingLaunch, submitLaunch, abortLaunch,\n    };\n}\n\nexport default useLaunches;"],"mappings":";AAAA,SAAQA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEtD,SACIC,eAAe,EAAEC,gBAAgB,EAAEC,eAAe,QAC/C,YAAY;AAEnB,SAASC,WAAWA,CAACC,cAAc,EAAEC,YAAY,EAAEC,cAAc,EAAE;EAAAC,EAAA;EAC/D,MAAM,CAACC,QAAQ,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACW,eAAe,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMa,WAAW,GAAGf,WAAW,CAAC,YAAY;IACxC,MAAMgB,eAAe,GAAG,MAAMb,eAAe,EAAE;IAC/CS,YAAY,CAACI,eAAe,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACZc,WAAW,EAAE;EACjB,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,MAAME,YAAY,GAAGjB,WAAW,CAAC,MAAOkB,CAAC,IAAK;IAC1CA,CAAC,CAACC,cAAc,EAAE;IAClBL,gBAAgB,CAAC,IAAI,CAAC;IACtB,MAAMM,IAAI,GAAG,IAAIC,QAAQ,CAACH,CAAC,CAACI,MAAM,CAAC;IACnC,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,YAAY,CAAC,CAAC;IACnD,MAAMC,OAAO,GAAGN,IAAI,CAACK,GAAG,CAAC,cAAc,CAAC;IACxC,MAAME,MAAM,GAAGP,IAAI,CAACK,GAAG,CAAC,aAAa,CAAC;IACtC,MAAMH,MAAM,GAAGF,IAAI,CAACK,GAAG,CAAC,kBAAkB,CAAC;IAC3C,MAAMG,QAAQ,GAAG,MAAMxB,gBAAgB,CAAC;MACpCmB,UAAU;MAAEG,OAAO;MAAEC,MAAM;MAAEL;IACjC,CAAC,CAAC;;IAEF;IACA,MAAMO,OAAO,GAAG,KAAK;IACrB,IAAIA,OAAO,EAAE;MACTd,WAAW,EAAE;MACbe,UAAU,CAAC,MAAM;QACbhB,gBAAgB,CAAC,KAAK,CAAC;QACvBP,cAAc,EAAE;MACpB,CAAC,EAAE,GAAG,CAAC;IACX,CAAC,MAAM;MACHE,cAAc,EAAE;IACpB;EACJ,CAAC,EAAE,CAACM,WAAW,EAAER,cAAc,EAAEE,cAAc,CAAC,CAAC;EAEjD,MAAMsB,WAAW,GAAG/B,WAAW,CAAC,MAAOgC,EAAE,IAAK;IAC1C,MAAMJ,QAAQ,GAAG,MAAMvB,eAAe,CAAC2B,EAAE,CAAC;;IAE1C;IACA,MAAMH,OAAO,GAAG,KAAK;IACrB,IAAIA,OAAO,EAAE;MACTd,WAAW,EAAE;MACbP,YAAY,EAAE;IAClB,CAAC,MAAM;MACHC,cAAc,EAAE;IACpB;EACJ,CAAC,EAAE,CAACM,WAAW,EAAEP,YAAY,EAAEC,cAAc,CAAC,CAAC;EAE/C,OAAO;IACHE,QAAQ;IAAEE,eAAe;IAAEI,YAAY;IAAEc;EAC7C,CAAC;AACL;AAACrB,EAAA,CAtDQJ,WAAW;AAwDpB,eAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}